/*!**************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/scss/style.scss ***!
  \**************************************************************************************************************/
@import url(https://fonts.googleapis.com/css2?family=Spartan:wght@600;700&display=swap);
/*!******************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/scss/style.scss (1) ***!
  \******************************************************************************************************************/
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
     ========================================================================== */
/**
   * Remove the margin in all browsers.
   */
body {
  margin: 0;
}

/**
   * Render the `main` element consistently in IE.
   */
main {
  display: block;
}

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
     ========================================================================== */
/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
     ========================================================================== */
/**
   * Remove the gray background on active links in IE 10.
   */
a {
  background-color: transparent;
}

/**
   * 1. Remove the bottom border in Chrome 57-
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */
b,
strong {
  font-weight: bolder;
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
   * Add the correct font size in all browsers.
   */
small {
  font-size: 80%;
}

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
     ========================================================================== */
/**
   * Remove the border on images inside links in IE 10.
   */
img {
  border-style: none;
}

/* Forms
     ========================================================================== */
/**
   * 1. Change the font styles in all browsers.
   * 2. Remove the margin in Firefox and Safari.
   */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
   * Correct the inability to style clickable types in iOS and Safari.
   */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
   * Remove the inner border and padding in Firefox.
   */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
   * Restore the focus styles unset by the previous rule.
   */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
   * Correct the padding in Firefox.
   */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
   * 1. Correct the text wrapping in Edge and IE.
   * 2. Correct the color inheritance from `fieldset` elements in IE.
   * 3. Remove the padding so developers are not caught out when they zero out
   *    `fieldset` elements in all browsers.
   */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
   * Add the correct vertical alignment in Chrome, Firefox, and Opera.
   */
progress {
  vertical-align: baseline;
}

/**
   * Remove the default vertical scrollbar in IE 10+.
   */
textarea {
  overflow: auto;
}

/**
   * 1. Add the correct box sizing in IE 10.
   * 2. Remove the padding in IE 10.
   */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
   * Remove the inner padding in Chrome and Safari on macOS.
   */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
     ========================================================================== */
/*
   * Add the correct display in Edge, IE 10+, and Firefox.
   */
details {
  display: block;
}

/*
   * Add the correct display in all browsers.
   */
summary {
  display: list-item;
}

/* Misc
     ========================================================================== */
/**
   * Add the correct display in IE 10+.
   */
template {
  display: none;
}

/**
   * Add the correct display in IE 10.
   */
[hidden] {
  display: none;
}

ul,
ol {
  list-style-type: none;
}

html {
  box-sizing: border-box;
}
html *,
html *::before,
html *::after {
  box-sizing: inherit;
}

section {
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: var(--main-background);
}
section.blue-theme {
  --main-background: hsl(222, 26%, 31%);
  --keypad-background: hsl(223, 31%, 20%);
  --toggle-background: hsl(223, 31%, 20%);
  --screen-background: hsl(224, 36%, 15%);
  --key-background-1: hsl(225, 21%, 49%);
  --key-shadow-1: hsl(224, 28%, 35%);
  --key-background-2: hsl(6, 63%, 50%);
  --key-shadow-2: hsl(6, 70%, 34%);
  --key-background-3: hsl(30, 25%, 89%);
  --key-shadow-3: hsl(28, 16%, 65%);
  --color-1: hsl(0, 0%, 100%);
  --color-2: hsla(0, 0%, 100%, 0.5);
  --color-3: hsl(221, 14%, 31%);
  --color-4: hsl(0, 0%, 100%);
  --color-5: hsl(0, 0%, 100%);
  --slider-pos: -190;
}
section.light-theme {
  --main-background: hsl(0, 0%, 90%);
  --keypad-background: hsl(0, 5%, 81%);
  --toggle-background: hsl(0, 5%, 81%);
  --screen-background: hsl(0, 0%, 93%);
  --key-background-1: hsl(185, 42%, 37%);
  --key-shadow-1: hsl(185, 58%, 25%);
  --key-background-2: hsl(25, 98%, 40%);
  --key-shadow-2: hsl(25, 99%, 27%);
  --key-background-3: hsl(45, 7%, 89%);
  --key-shadow-3: hsl(35, 11%, 61%);
  --color-1: hsl(60, 10%, 19%);
  --color-2: rgba(53, 53, 44, 0.5);
  --color-3: hsl(60, 10%, 19%);
  --color-4: hsl(0, 0%, 100%);
  --color-5: hsl(0, 0%, 100%);
  --slider-pos: -50;
}
section.purple-theme {
  --main-background: hsl(268, 75%, 9%);
  --keypad-background: hsl(268, 71%, 12%);
  --toggle-background: hsl(268, 71%, 12%);
  --screen-background: hsl(268, 71%, 12%);
  --key-background-1: hsl(281, 89%, 26%);
  --key-shadow-1: hsl(285, 91%, 52%);
  --key-background-2: hsl(176, 100%, 44%);
  --key-shadow-2: hsl(177, 92%, 70%);
  --key-background-3: hsl(268, 47%, 21%);
  --key-shadow-3: hsl(290, 70%, 36%);
  --color-1: hsl(52, 100%, 62%);
  --color-2: hsla(52, 100%, 64%, 0.5);
  --color-3: hsl(52, 100%, 62%);
  --color-4: hsl(0, 0%, 100%);
  --color-5: hsl(198, 20%, 13%);
  --slider-pos: 90;
}

.theme-switcher {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 0.25rem;
  padding-bottom: 0.25rem;
}
.theme-switcher__numbers {
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 0.875rem;
}
.theme-switcher__number {
  padding: 0;
  margin: 0;
  font-family: "Spartan", sans-serif;
  font-size: 0.75rem;
  color: var(--color-1);
  font-weight: 600;
  background: transparent;
  border: none;
  cursor: pointer;
}
.theme-switcher__switch-wrapper {
  height: 1.5rem;
  border-radius: 1000px;
  width: 4.375rem;
  overflow: hidden;
}
.theme-switcher__switch {
  display: block;
  min-width: 100%;
  min-height: 100%;
  background-color: var(--toggle-background);
  position: relative;
  cursor: pointer;
}
.theme-switcher__switch input[type=checkbox] {
  display: none;
}
.theme-switcher__slider {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(calc(var(--slider-pos) * 1%), -50%);
  width: 1rem;
  aspect-ratio: 1;
  border-radius: 50%;
  background-color: var(--key-background-2);
  transition: transform 0.25s ease-in-out;
}

.calculator {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1.5rem;
  width: clamp(20.5rem, 80vw, 34rem);
}
.calculator .header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: flex-end;
  gap: 1.5rem;
  width: 100%;
}
.calculator .header__title {
  font-family: "Spartan", sans-serif;
  font-size: clamp(1.75rem, 5vw, 2rem);
  color: var(--color-1);
  font-weight: 700;
  margin: 0;
}
.calculator .header__theme-switcher-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: flex-end;
  gap: 1rem;
}
.calculator .header__theme-word {
  padding: 0;
  margin: 0;
  font-family: "Spartan", sans-serif;
  font-size: 0.75rem;
  color: var(--color-1);
  font-weight: 600;
  text-transform: uppercase;
  padding-bottom: 0.375rem;
}
.calculator .screen {
  background-color: var(--screen-background);
  width: 100%;
  min-height: 9.5rem;
  border-radius: 10px;
  padding: clamp(1.25rem, 4vw, 2rem);
  text-align: right;
}
.calculator .screen p {
  padding: 0;
  margin: 0;
}
.calculator .screen__current-operand {
  font-family: "Spartan", sans-serif;
  font-size: clamp(2.5rem, 8vw, 3rem);
  color: var(--color-1);
  font-weight: 700;
  word-wrap: break-word;
}
.calculator .screen__current-operand-wrapper {
  margin-top: 0.5rem;
}
.calculator .screen__prev-operand {
  font-family: "Spartan", sans-serif;
  font-size: clamp(1.1rem, 4vw, 1.25rem);
  color: var(--color-2);
  font-weight: 600;
}
.calculator .keypad {
  display: grid;
  grid-template-rows: repeat(5, 1fr);
  grid-template-columns: repeat(4, 1fr);
  gap: clamp(0.875rem, 3vw, 1.75rem);
  width: 100%;
  background-color: var(--keypad-background);
  border-radius: 10px;
  padding: clamp(1.25rem, 4vw, 2rem);
}
.calculator .keypad .key {
  font-family: "Spartan", sans-serif;
  font-size: clamp(1.75rem, 5vw, 2rem);
  color: var(--color-3);
  font-weight: 700;
  background-color: var(--key-background-3);
  box-shadow: 0px 4px 0px 0px var(--key-shadow-3);
  border-radius: clamp(0.25rem, 1vw, 0.75rem);
  border: none;
  padding: 1rem 0;
  line-height: 90%;
  padding-top: 1.25rem;
  cursor: pointer;
}
.calculator .keypad .key.active {
  box-shadow: 0 -4px 0px 0px var(--key-background-3);
  background-color: var(--key-shadow-3);
}
.calculator .keypad .key--long {
  grid-column: span 2;
}
.calculator .keypad .key--edit {
  font-family: "Spartan", sans-serif;
  font-size: clamp(1.125rem, 5vw, 1.5rem);
  color: var(--color-4);
  font-weight: 600;
  text-transform: uppercase;
  background-color: var(--key-background-1);
  box-shadow: 0px 4px 0px 0px var(--key-shadow-1);
}
.calculator .keypad .key--edit.active {
  box-shadow: 0 -4px 0px 0px var(--key-background-1);
  background-color: var(--key-shadow-1);
}
.calculator .keypad .key--result {
  background-color: var(--key-background-2);
  box-shadow: 0px 4px 0px 0px var(--key-shadow-2);
  color: var(--color-5);
  font-size: 1.25rem;
}
.calculator .keypad .key--result.active {
  box-shadow: 0 -4px 0px 0px var(--key-background-2);
  background-color: var(--key-shadow-2);
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/